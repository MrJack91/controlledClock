/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class jd2xx_JD2XX */

#ifndef _Included_jd2xx_JD2XX
#define _Included_jd2xx_JD2XX
#ifdef __cplusplus
extern "C" {
#endif
#undef jd2xx_JD2XX_OK
#define jd2xx_JD2XX_OK 0L
#undef jd2xx_JD2XX_INVALID_HANDLE
#define jd2xx_JD2XX_INVALID_HANDLE 1L
#undef jd2xx_JD2XX_DEVICE_NOT_FOUND
#define jd2xx_JD2XX_DEVICE_NOT_FOUND 2L
#undef jd2xx_JD2XX_DEVICE_NOT_OPENED
#define jd2xx_JD2XX_DEVICE_NOT_OPENED 3L
#undef jd2xx_JD2XX_IO_ERROR
#define jd2xx_JD2XX_IO_ERROR 4L
#undef jd2xx_JD2XX_INSUFFICIENT_RESOURCES
#define jd2xx_JD2XX_INSUFFICIENT_RESOURCES 5L
#undef jd2xx_JD2XX_INVALID_PARAMETER
#define jd2xx_JD2XX_INVALID_PARAMETER 6L
#undef jd2xx_JD2XX_INVALID_BAUD_RATE
#define jd2xx_JD2XX_INVALID_BAUD_RATE 7L
#undef jd2xx_JD2XX_DEVICE_NOT_OPENED_FOR_ERASE
#define jd2xx_JD2XX_DEVICE_NOT_OPENED_FOR_ERASE 8L
#undef jd2xx_JD2XX_DEVICE_NOT_OPENED_FOR_WRITE
#define jd2xx_JD2XX_DEVICE_NOT_OPENED_FOR_WRITE 9L
#undef jd2xx_JD2XX_FAILED_TO_WRITE_DEVICE
#define jd2xx_JD2XX_FAILED_TO_WRITE_DEVICE 10L
#undef jd2xx_JD2XX_EEPROM_READ_FAILED
#define jd2xx_JD2XX_EEPROM_READ_FAILED 11L
#undef jd2xx_JD2XX_EEPROM_WRITE_FAILED
#define jd2xx_JD2XX_EEPROM_WRITE_FAILED 12L
#undef jd2xx_JD2XX_EEPROM_ERASE_FAILED
#define jd2xx_JD2XX_EEPROM_ERASE_FAILED 13L
#undef jd2xx_JD2XX_EEPROM_NOT_PRESENT
#define jd2xx_JD2XX_EEPROM_NOT_PRESENT 14L
#undef jd2xx_JD2XX_EEPROM_NOT_PROGRAMMED
#define jd2xx_JD2XX_EEPROM_NOT_PROGRAMMED 15L
#undef jd2xx_JD2XX_INVALID_ARGS
#define jd2xx_JD2XX_INVALID_ARGS 16L
#undef jd2xx_JD2XX_NOT_SUPPORTED
#define jd2xx_JD2XX_NOT_SUPPORTED 17L
#undef jd2xx_JD2XX_OTHER_ERROR
#define jd2xx_JD2XX_OTHER_ERROR 18L
#undef jd2xx_JD2XX_DEVICE_LIST_NOT_READY
#define jd2xx_JD2XX_DEVICE_LIST_NOT_READY 19L
#undef jd2xx_JD2XX_OPEN_BY_SERIAL_NUMBER
#define jd2xx_JD2XX_OPEN_BY_SERIAL_NUMBER 1L
#undef jd2xx_JD2XX_OPEN_BY_DESCRIPTION
#define jd2xx_JD2XX_OPEN_BY_DESCRIPTION 2L
#undef jd2xx_JD2XX_OPEN_BY_LOCATION
#define jd2xx_JD2XX_OPEN_BY_LOCATION 4L
#undef jd2xx_JD2XX_LIST_NUMBER_ONLY
#define jd2xx_JD2XX_LIST_NUMBER_ONLY -2147483648L
#undef jd2xx_JD2XX_LIST_BY_INDEX
#define jd2xx_JD2XX_LIST_BY_INDEX 1073741824L
#undef jd2xx_JD2XX_LIST_ALL
#define jd2xx_JD2XX_LIST_ALL 536870912L
#undef jd2xx_JD2XX_LIST_MASK
#define jd2xx_JD2XX_LIST_MASK -536870912L
#undef jd2xx_JD2XX_BAUD_300
#define jd2xx_JD2XX_BAUD_300 300L
#undef jd2xx_JD2XX_BAUD_600
#define jd2xx_JD2XX_BAUD_600 600L
#undef jd2xx_JD2XX_BAUD_1200
#define jd2xx_JD2XX_BAUD_1200 1200L
#undef jd2xx_JD2XX_BAUD_2400
#define jd2xx_JD2XX_BAUD_2400 2400L
#undef jd2xx_JD2XX_BAUD_4800
#define jd2xx_JD2XX_BAUD_4800 4800L
#undef jd2xx_JD2XX_BAUD_9600
#define jd2xx_JD2XX_BAUD_9600 9600L
#undef jd2xx_JD2XX_BAUD_14400
#define jd2xx_JD2XX_BAUD_14400 14400L
#undef jd2xx_JD2XX_BAUD_19200
#define jd2xx_JD2XX_BAUD_19200 19200L
#undef jd2xx_JD2XX_BAUD_38400
#define jd2xx_JD2XX_BAUD_38400 38400L
#undef jd2xx_JD2XX_BAUD_57600
#define jd2xx_JD2XX_BAUD_57600 57600L
#undef jd2xx_JD2XX_BAUD_115200
#define jd2xx_JD2XX_BAUD_115200 115200L
#undef jd2xx_JD2XX_BAUD_230400
#define jd2xx_JD2XX_BAUD_230400 230400L
#undef jd2xx_JD2XX_BAUD_460800
#define jd2xx_JD2XX_BAUD_460800 460800L
#undef jd2xx_JD2XX_BAUD_921600
#define jd2xx_JD2XX_BAUD_921600 921600L
#undef jd2xx_JD2XX_BITS_8
#define jd2xx_JD2XX_BITS_8 8L
#undef jd2xx_JD2XX_BITS_7
#define jd2xx_JD2XX_BITS_7 7L
#undef jd2xx_JD2XX_BITS_6
#define jd2xx_JD2XX_BITS_6 6L
#undef jd2xx_JD2XX_BITS_5
#define jd2xx_JD2XX_BITS_5 5L
#undef jd2xx_JD2XX_STOP_BITS_1
#define jd2xx_JD2XX_STOP_BITS_1 0L
#undef jd2xx_JD2XX_STOP_BITS_1_5
#define jd2xx_JD2XX_STOP_BITS_1_5 1L
#undef jd2xx_JD2XX_STOP_BITS_2
#define jd2xx_JD2XX_STOP_BITS_2 2L
#undef jd2xx_JD2XX_PARITY_NONE
#define jd2xx_JD2XX_PARITY_NONE 0L
#undef jd2xx_JD2XX_PARITY_ODD
#define jd2xx_JD2XX_PARITY_ODD 1L
#undef jd2xx_JD2XX_PARITY_EVEN
#define jd2xx_JD2XX_PARITY_EVEN 2L
#undef jd2xx_JD2XX_PARITY_MARK
#define jd2xx_JD2XX_PARITY_MARK 3L
#undef jd2xx_JD2XX_PARITY_SPACE
#define jd2xx_JD2XX_PARITY_SPACE 4L
#undef jd2xx_JD2XX_FLOW_NONE
#define jd2xx_JD2XX_FLOW_NONE 0L
#undef jd2xx_JD2XX_FLOW_RTS_CTS
#define jd2xx_JD2XX_FLOW_RTS_CTS 256L
#undef jd2xx_JD2XX_FLOW_DTR_DSR
#define jd2xx_JD2XX_FLOW_DTR_DSR 512L
#undef jd2xx_JD2XX_FLOW_XON_XOFF
#define jd2xx_JD2XX_FLOW_XON_XOFF 1024L
#undef jd2xx_JD2XX_PURGE_RX
#define jd2xx_JD2XX_PURGE_RX 1L
#undef jd2xx_JD2XX_PURGE_TX
#define jd2xx_JD2XX_PURGE_TX 2L
#undef jd2xx_JD2XX_EVENT_RXCHAR
#define jd2xx_JD2XX_EVENT_RXCHAR 1L
#undef jd2xx_JD2XX_EVENT_MODEM_STATUS
#define jd2xx_JD2XX_EVENT_MODEM_STATUS 2L
#undef jd2xx_JD2XX_EVENT_LINE_STATUS
#define jd2xx_JD2XX_EVENT_LINE_STATUS 4L
#undef jd2xx_JD2XX_DEFAULT_RX_TIMEOUT
#define jd2xx_JD2XX_DEFAULT_RX_TIMEOUT 300L
#undef jd2xx_JD2XX_DEFAULT_TX_TIMEOUT
#define jd2xx_JD2XX_DEFAULT_TX_TIMEOUT 300L
#undef jd2xx_JD2XX_DEVICE_BM
#define jd2xx_JD2XX_DEVICE_BM 0L
#undef jd2xx_JD2XX_DEVICE_AM
#define jd2xx_JD2XX_DEVICE_AM 1L
#undef jd2xx_JD2XX_DEVICE_100AX
#define jd2xx_JD2XX_DEVICE_100AX 2L
#undef jd2xx_JD2XX_DEVICE_UNKNOWN
#define jd2xx_JD2XX_DEVICE_UNKNOWN 3L
#undef jd2xx_JD2XX_DEVICE_2232C
#define jd2xx_JD2XX_DEVICE_2232C 4L
#undef jd2xx_JD2XX_DEVICE_232R
#define jd2xx_JD2XX_DEVICE_232R 5L
#undef jd2xx_JD2XX_DEVICE_2232H
#define jd2xx_JD2XX_DEVICE_2232H 6L
#undef jd2xx_JD2XX_DEVICE_4232H
#define jd2xx_JD2XX_DEVICE_4232H 7L
#undef jd2xx_JD2XX_DEVICE_232H
#define jd2xx_JD2XX_DEVICE_232H 8L
#undef jd2xx_JD2XX_FLAGS_OPENED
#define jd2xx_JD2XX_FLAGS_OPENED 1L
#undef jd2xx_JD2XX_FLAGS_HISPEED
#define jd2xx_JD2XX_FLAGS_HISPEED 2L
#undef jd2xx_JD2XX_BITMODE_RESET
#define jd2xx_JD2XX_BITMODE_RESET 0L
#undef jd2xx_JD2XX_BITMODE_ASYNC_BITBANG
#define jd2xx_JD2XX_BITMODE_ASYNC_BITBANG 1L
#undef jd2xx_JD2XX_BITMODE_MPSSE
#define jd2xx_JD2XX_BITMODE_MPSSE 2L
#undef jd2xx_JD2XX_BITMODE_SYNC_BITBANG
#define jd2xx_JD2XX_BITMODE_SYNC_BITBANG 4L
#undef jd2xx_JD2XX_BITMODE_MCU_HOST
#define jd2xx_JD2XX_BITMODE_MCU_HOST 8L
#undef jd2xx_JD2XX_BITMODE_FAST_SERIAL
#define jd2xx_JD2XX_BITMODE_FAST_SERIAL 16L
#undef jd2xx_JD2XX_BITMODE_CBUS_BITBANG
#define jd2xx_JD2XX_BITMODE_CBUS_BITBANG 32L
#undef jd2xx_JD2XX_BITMODE_SYNC_FIFO
#define jd2xx_JD2XX_BITMODE_SYNC_FIFO 64L
#undef jd2xx_JD2XX_FT232R_CBUS_TXDEN
#define jd2xx_JD2XX_FT232R_CBUS_TXDEN 0L
#undef jd2xx_JD2XX_FT232R_CBUS_PWRON
#define jd2xx_JD2XX_FT232R_CBUS_PWRON 1L
#undef jd2xx_JD2XX_FT232R_CBUS_RXLED
#define jd2xx_JD2XX_FT232R_CBUS_RXLED 2L
#undef jd2xx_JD2XX_FT232R_CBUS_TXLED
#define jd2xx_JD2XX_FT232R_CBUS_TXLED 3L
#undef jd2xx_JD2XX_FT232R_CBUS_TXRXLED
#define jd2xx_JD2XX_FT232R_CBUS_TXRXLED 4L
#undef jd2xx_JD2XX_FT232R_CBUS_SLEEP
#define jd2xx_JD2XX_FT232R_CBUS_SLEEP 5L
#undef jd2xx_JD2XX_FT232R_CBUS_CLK48
#define jd2xx_JD2XX_FT232R_CBUS_CLK48 6L
#undef jd2xx_JD2XX_FT232R_CBUS_CLK24
#define jd2xx_JD2XX_FT232R_CBUS_CLK24 7L
#undef jd2xx_JD2XX_FT232R_CBUS_CLK12
#define jd2xx_JD2XX_FT232R_CBUS_CLK12 8L
#undef jd2xx_JD2XX_FT232R_CBUS_CLK6
#define jd2xx_JD2XX_FT232R_CBUS_CLK6 9L
#undef jd2xx_JD2XX_FT232R_CBUS_IOMODE
#define jd2xx_JD2XX_FT232R_CBUS_IOMODE 10L
#undef jd2xx_JD2XX_FT232R_CBUS_BITBANG_WR
#define jd2xx_JD2XX_FT232R_CBUS_BITBANG_WR 11L
#undef jd2xx_JD2XX_FT232R_CBUS_BITBANG_RD
#define jd2xx_JD2XX_FT232R_CBUS_BITBANG_RD 12L
#undef jd2xx_JD2XX_FT232H_CBUS_TRISTATE
#define jd2xx_JD2XX_FT232H_CBUS_TRISTATE 0L
#undef jd2xx_JD2XX_FT232H_CBUS_TXLED
#define jd2xx_JD2XX_FT232H_CBUS_TXLED 1L
#undef jd2xx_JD2XX_FT232H_CBUS_RXLED
#define jd2xx_JD2XX_FT232H_CBUS_RXLED 2L
#undef jd2xx_JD2XX_FT232H_CBUS_TXRXLED
#define jd2xx_JD2XX_FT232H_CBUS_TXRXLED 3L
#undef jd2xx_JD2XX_FT232H_CBUS_PWREN
#define jd2xx_JD2XX_FT232H_CBUS_PWREN 4L
#undef jd2xx_JD2XX_FT232H_CBUS_SLEEP
#define jd2xx_JD2XX_FT232H_CBUS_SLEEP 5L
#undef jd2xx_JD2XX_FT232H_CBUS_DRIVE_0
#define jd2xx_JD2XX_FT232H_CBUS_DRIVE_0 6L
#undef jd2xx_JD2XX_FT232H_CBUS_DRIVE_1
#define jd2xx_JD2XX_FT232H_CBUS_DRIVE_1 7L
#undef jd2xx_JD2XX_FT232H_CBUS_IOMODE
#define jd2xx_JD2XX_FT232H_CBUS_IOMODE 8L
#undef jd2xx_JD2XX_FT232H_CBUS_TXDEN
#define jd2xx_JD2XX_FT232H_CBUS_TXDEN 9L
#undef jd2xx_JD2XX_FT232H_CBUS_CLK30
#define jd2xx_JD2XX_FT232H_CBUS_CLK30 10L
#undef jd2xx_JD2XX_FT232H_CBUS_CLK15
#define jd2xx_JD2XX_FT232H_CBUS_CLK15 11L
#undef jd2xx_JD2XX_FT232H_CBUS_CLK7_5
#define jd2xx_JD2XX_FT232H_CBUS_CLK7_5 12L
/*
 * Class:     jd2xx_JD2XX
 * Method:    getLibraryVersion
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jd2xx_JD2XX_getLibraryVersion
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    createDeviceInfoList
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jd2xx_JD2XX_createDeviceInfoList
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    getDeviceInfoDetail
 * Signature: (I)Ljd2xx/JD2XX/DeviceInfo;
 */
JNIEXPORT jobject JNICALL Java_jd2xx_JD2XX_getDeviceInfoDetail
  (JNIEnv *, jobject, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    open
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_open
  (JNIEnv *, jobject, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    close
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_close
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    listDevices
 * Signature: (I)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_jd2xx_JD2XX_listDevices
  (JNIEnv *, jobject, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    openEx
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_openEx__Ljava_lang_String_2I
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    openEx
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_openEx__II
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    read
 * Signature: ([BII)I
 */
JNIEXPORT jint JNICALL Java_jd2xx_JD2XX_read
  (JNIEnv *, jobject, jbyteArray, jint, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    write
 * Signature: ([BII)I
 */
JNIEXPORT jint JNICALL Java_jd2xx_JD2XX_write
  (JNIEnv *, jobject, jbyteArray, jint, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    setBaudRate
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_setBaudRate
  (JNIEnv *, jobject, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    setDivisor
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_setDivisor
  (JNIEnv *, jobject, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    setDataCharacteristics
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_setDataCharacteristics
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    setFlowControl
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_setFlowControl
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    resetDevice
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_resetDevice
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    setDtr
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_setDtr
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    clrDtr
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_clrDtr
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    setRts
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_setRts
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    clrRts
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_clrRts
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    getModemStatus
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jd2xx_JD2XX_getModemStatus
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    setChars
 * Signature: (IZIZ)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_setChars
  (JNIEnv *, jobject, jint, jboolean, jint, jboolean);

/*
 * Class:     jd2xx_JD2XX
 * Method:    purge
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_purge
  (JNIEnv *, jobject, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    setTimeouts
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_setTimeouts
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    getQueueStatus
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jd2xx_JD2XX_getQueueStatus
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    setBreakOn
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_setBreakOn
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    setBreakOff
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_setBreakOff
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    getStatus
 * Signature: ()[I
 */
JNIEXPORT jintArray JNICALL Java_jd2xx_JD2XX_getStatus
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    setEventNotification
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_setEventNotification
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    setWaitMask
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_setWaitMask
  (JNIEnv *, jobject, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    waitOnMask
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jd2xx_JD2XX_waitOnMask
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    getEventStatus
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jd2xx_JD2XX_getEventStatus
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    readEE
 * Signature: (I)S
 */
JNIEXPORT jshort JNICALL Java_jd2xx_JD2XX_readEE
  (JNIEnv *, jobject, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    writeEE
 * Signature: (IS)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_writeEE
  (JNIEnv *, jobject, jint, jshort);

/*
 * Class:     jd2xx_JD2XX
 * Method:    eraseEE
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_eraseEE
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    eeProgram
 * Signature: (Ljd2xx/JD2XX/ProgramData;)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_eeProgram
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    eeProgramEx
 * Signature: (Ljd2xx/JD2XX/ProgramData;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_eeProgramEx
  (JNIEnv *, jobject, jobject, jstring, jstring, jstring, jstring);

/*
 * Class:     jd2xx_JD2XX
 * Method:    eeRead
 * Signature: ()Ljd2xx/JD2XX/ProgramData;
 */
JNIEXPORT jobject JNICALL Java_jd2xx_JD2XX_eeRead
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    eeReadEx
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljd2xx/JD2XX/ProgramData;
 */
JNIEXPORT jobject JNICALL Java_jd2xx_JD2XX_eeReadEx
  (JNIEnv *, jobject, jstring, jstring, jstring, jstring);

/*
 * Class:     jd2xx_JD2XX
 * Method:    eeUASize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jd2xx_JD2XX_eeUASize
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    eeUAWrite
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_eeUAWrite
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     jd2xx_JD2XX
 * Method:    eeUARead
 * Signature: (I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_jd2xx_JD2XX_eeUARead
  (JNIEnv *, jobject, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    setLatencyTimer
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_setLatencyTimer
  (JNIEnv *, jobject, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    getLatencyTimer
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jd2xx_JD2XX_getLatencyTimer
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    setBitMode
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_setBitMode
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    getBitMode
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jd2xx_JD2XX_getBitMode
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    setUSBParameters
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_setUSBParameters
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    setDeadmanTimeout
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_setDeadmanTimeout
  (JNIEnv *, jobject, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    getDeviceInfo
 * Signature: ()Ljd2xx/JD2XX/DeviceInfo;
 */
JNIEXPORT jobject JNICALL Java_jd2xx_JD2XX_getDeviceInfo
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    stopInTask
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_stopInTask
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    restartInTask
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_restartInTask
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    setResetPipeRetryCount
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_setResetPipeRetryCount
  (JNIEnv *, jobject, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    resetPort
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_resetPort
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    cyclePort
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_cyclePort
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    getDriverVersion
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jd2xx_JD2XX_getDriverVersion
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    rescan
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_rescan
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    reload
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_reload
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    getComPortNumber
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jd2xx_JD2XX_getComPortNumber
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    eeReadConfig
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_jd2xx_JD2XX_eeReadConfig
  (JNIEnv *, jobject, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    eeWriteConfig
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_eeWriteConfig
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    eeReadEcc
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_jd2xx_JD2XX_eeReadEcc
  (JNIEnv *, jobject, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    getQueueStatusEx
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jd2xx_JD2XX_getQueueStatusEx
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    registerEvent
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_registerEvent
  (JNIEnv *, jobject, jint);

/*
 * Class:     jd2xx_JD2XX
 * Method:    signalEvent
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jd2xx_JD2XX_signalEvent
  (JNIEnv *, jobject);

/*
 * Class:     jd2xx_JD2XX
 * Method:    waitEvent
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jd2xx_JD2XX_waitEvent
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
